<?xml version="1.0"?>
<!-- Traxter Robot -->
    <robot name="traxter" xmlns:xacro="http://www.ros.org/wiki/xacro" canonical_link='base_link'>
<!-- CONSTANTS -->

    <!-- Constants for robot dimensions -->
    <xacro:property name="PI" value="3.1415926535897931" />
    <xacro:property name="wheel_base" value="0.225" />
    <xacro:property name="wheel_longitudinal_dist" value="0.15" /> <!-- Distance between rear and front wheels in x-direction-->
    <xacro:property name="camera_height" value="0.15" />
    <xacro:property name="scanner_height" value="0.05315" />
     <xacro:property name="imu_height" value="0.033" />

    <!-- Chassis Constants -->
    <xacro:property name="chassis_mass" value="1.5" /> 
    <xacro:property name="chassis_width" value="0.202" />
    <xacro:property name="chassis_length" value="0.235" />
    <xacro:property name="chassis_height" value="0.02" />
    <!-- Wheels Constants -->
    <xacro:property name="wheel_mass" value="1" />
    <xacro:property name="wheel_width" value="0.03" />
    <xacro:property name="wheel_radius" value="0.0355" />

<!-- INCLUDES-->
    <xacro:include filename="colours.xacro" /> <!-- rviz colours-->
    <xacro:include filename="inertial_macros.xacro" /> <!-- basic inertia math-->
    <xacro:include filename="$(find traxter_description)/urdf/_d435.urdf.xacro" />
  
  <!-- FOR REALSENSE DESCRIPTION -->
  <xacro:arg name="use_nominal_extrinsics" default="true"/>
  <xacro:arg name="add_plug" default="false" />
  <xacro:arg name="use_mesh" default="true" />

<!-- LINKS and JOINTS -->

    <link name="base_link"></link>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 -${wheel_radius}"/>
    </joint>

    <link name="base_footprint"></link>


    <!-- CHASSIS -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-${chassis_length * 0.5 - wheel_radius} 0 ${wheel_radius - chassis_height* 0.5}"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                    <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <!-- WHEELS -->
    <joint name="front_left_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="front_left_wheel"/>
        <origin xyz="${chassis_length* 0.5 - wheel_radius} ${wheel_base* 0.5} ${-wheel_radius + chassis_height* 0.5}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-1e16" upper="1e16" effort="100000.0" velocity="23"/>
        <dynamics damping="0.1"/>
    </joint>

    <link name="front_left_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>100.0</kp>
                        <kd>1.0</kd>
                    </ode>
                </contact>
            <friction>
                    <ode>
                        <mu>10</mu>
                        <mu2>1</mu2>
                        <slip1>0.01</slip1>
                        <slip2>0.2</slip2>
                        <fdir1>0 0 1</fdir1>
                    </ode>
                </friction>
            </surface>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="front_right_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="front_right_wheel"/>
        <origin xyz="${chassis_length* 0.5 - wheel_radius} ${-wheel_base* 0.5} ${-wheel_radius + chassis_height* 0.5}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-1e16" upper="1e16" effort="100000.0" velocity="23"/>
        <dynamics damping="0.1"/>
    </joint>

    <link name="front_right_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>100.0</kp>
                        <kd>1.0</kd>
                    </ode>
                </contact>
            <friction>
                    <ode>
                        <mu>10</mu>
                        <mu2>1</mu2>
                        <slip1>0.01</slip1>
                        <slip2>0.2</slip2>
                        <fdir1>0 0 1</fdir1>
                
                    </ode>
                </friction>
            </surface>         
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="rear_left_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="rear_left_wheel"/>
        <origin xyz="${chassis_length* 0.5 - wheel_radius-wheel_longitudinal_dist} ${wheel_base* 0.5} ${-wheel_radius + chassis_height* 0.5}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-1e16" upper="1e16" effort="100000.0" velocity="23"/>
        <dynamics damping="0.1"/>
    </joint>

    <link name="rear_left_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>100.0</kp>
                        <kd>1.0</kd>
                    </ode>
                </contact>
            <friction>
                    <ode>
                        <mu>10</mu>
                        <mu2>1</mu2>
                        <slip1>0.01</slip1>
                        <slip2>0.2</slip2>
                        <fdir1>0 0 1</fdir1>
                
                    </ode>
                </friction>
            </surface>           
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="rear_right_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="rear_right_wheel"/>
        <origin xyz="${chassis_length* 0.5 - wheel_radius-wheel_longitudinal_dist} ${-wheel_base* 0.5} ${-wheel_radius + chassis_height* 0.5}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-1e16" upper="1e16" effort="100000.0" velocity="23"/>
        <dynamics damping="0.1"/>
    </joint>

    <link name="rear_right_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${PI* 0.5} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <surface>
                <contact>
                    <ode>
                        <kp>100.0</kp>
                        <kd>1.0</kd>
                    </ode>
                </contact>
            <friction>
                    <ode>
                        <mu>10</mu>
                        <mu2>1</mu2>
                        <slip1>0.01</slip1>
                        <slip2>0.2</slip2>
                        <fdir1>0 0 1</fdir1>
                
                    </ode>
                </friction>
            </surface>            
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_width}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>


    <!-- CAMERA SUPPORT-->
    <joint name="camera_support_joint" type="fixed">
        <parent link="chassis"/>
        <child link="camera_support"/>
        <origin xyz="${chassis_length* 0.5-0.07} 0 ${(chassis_height+camera_height)* 0.5}" rpy="0 0 0"/>
    </joint> 

    <link name="camera_support">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                    <box size="0.0195 0.0195 ${camera_height}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.0195 0.0195 ${camera_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.3" x="0.02" y="0.02" z="${camera_height}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>   

    <!-- D435 Intel RealSense -->
    <joint name="d435_joint" type="fixed">
        <parent link="camera_support"/>
        <child link="d435_link"/>
        <origin xyz="0.015 0 ${camera_height* 0.5}" rpy="0 0 0"/>
    </joint>

    <link name="d435_link">
    </link>

    <xacro:sensor_d435 parent="d435_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)" use_mesh="$(arg use_mesh)">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:sensor_d435>

    <!-- HOKUYO LIDAR -->
    <joint name="lidar_joint" type="fixed">
        <parent link="chassis"/>
        <child link="hokuyo"/>
        <origin xyz="${chassis_length* 0.5-0.025} 0 ${chassis_height* 0.5+scanner_height}" rpy="0 0 0"/>
    </joint>

    <link name="hokuyo"> <!-- Values based and taken from https://fuel.gazebosim.org/1.0/mjcarroll/models/Hokuyo URG04LX -->
        <inertial>
          <mass value="0.13"/>
          <inertia ixx ="8.018737945431742e-05" ixy="0" ixz="0"
            iyy="8.018737945431742e-05" iyz="0" 
            izz="5.418967911032867e-05"/>
        </inertial>
        <collision name="collision-base">
            <origin xyz="0 0 ${-scanner_height+0.041* 0.5}" rpy="0 0 0"/>
            <geometry>
              <box size="0.05 0.05 0.041"/>
            </geometry>
          </collision>
          <collision name="collision-top">
            <origin xyz="0 0 ${-scanner_height+0.041+0.0265* 0.5}" rpy="0 0 0"/>
            <geometry>
              <cylinder radius="0.021" length="0.0265"/>
            </geometry>
          </collision>
        <visual>
        <origin xyz="0 0 ${-scanner_height+0.035}" rpy="0 0 0 "/>
            <geometry>
                <mesh filename="package://traxter_description/meshes/hokuyo.dae" scale="1 1 1"/> <!-- taken form https://app.gazebosim.org/OpenRobotics/fuel/models/Hokuyo -->
            </geometry>
        </visual>
    </link>
    
    <!-- MPU9255 IMU -->
        <joint name="imu_joint" type="fixed">
            <parent link="chassis"/>
            <child link="imu_link"/>
            <origin xyz="${chassis_length* 0.5-0.12} 0 ${chassis_height* 0.5+imu_height}" rpy="0 0 0"/>
        </joint>
    
        <link name="imu_link"></link>

        <!-- Depth Camera -->
    <gazebo reference="d435_link"> <!-- values taken from https://fuel.gazebosim.org/1.0/OpenRobotics/models/Intel RealSense D435 -->
        <sensor name="rgbd_camera" type="rgbd_camera">
        <pose>0.02 0 0 0 0 0</pose>
            <always_on>1</always_on>
            <update_rate>15</update_rate>
            <camera name="camera">
              <horizontal_fov>1.0472</horizontal_fov>
              <lens>
                <intrinsics>
                  <!-- fx = fy = width / ( 2 * tan (hfov / 2 ) ) -->
                  <fx>554.25469</fx>
                  <fy>554.25469</fy>
                  <!-- cx = ( width + 1 ) / 2 -->
                  <cx>320.5</cx>
                  <!-- cy = ( height + 1 ) / 2 -->
                  <cy>240.5</cy>
                  <s>0</s>
                </intrinsics>
              </lens>
              <distortion>
                <k1>0.0</k1>
                <k2>0.0</k2>
                <k3>0.0</k3>
                <p1>0.0</p1>
                <p2>0.0</p2>
                <center>0.5 0.5</center>
              </distortion>
              <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
              </image>
              <clip>
                <near>0.01</near>
                <far>300</far>
              </clip>
              <depth_camera>
                <clip>
                  <near>0.1</near>
                  <far>10</far>
                </clip>
              </depth_camera>
              <noise>
                <type>gaussian</type>
                <mean>0</mean>
                <stddev>0.007</stddev>
              </noise>
            </camera>
          </sensor>
    </gazebo>


<!--         <gazebo>
            <plugin filename="libignition-gazebo-diff-drive-system.so"
                name="ignition::gazebo::systems::DiffDrive">
                <left_joint>rear_left_wheel_joint</left_joint>
                <right_joint>rear_right_wheel_joint</right_joint>
                <left_joint>front_left_wheel_joint</left_joint>
                <right_joint>front_right_wheel_joint</right_joint>
                <wheel_separation>${wheel_base}</wheel_separation>
                <wheel_radius>${wheel_radius}</wheel_radius>
                <odom_publish_frequency>100</odom_publish_frequency>
                <topic>cmd_vel</topic>
                <odom_topic>traxter/odometry/true</odom_topic>
                <frame_id>odom</frame_id>
                <child_frame_id>base_link</child_frame_id>                                  
            </plugin>        
        </gazebo> -->
        <gazebo>
            <plugin filename="libignition-gazebo-odometry-publisher-system.so"
                name="ignition::gazebo::systems::OdometryPublisher">
                <odom_frame>map</odom_frame>
                <robot_base_frame>base_link</robot_base_frame>
                <odom_topic>odometry/true</odom_topic>                              
            </plugin>        
        </gazebo>

        <gazebo>
            <plugin filename="libignition-gazebo-joint-controller-system.so"
                name="ignition::gazebo::systems::JointController">
                <joint_name>front_right_wheel_joint</joint_name>
                <topic>/front_right_wheel/cmd_vel</topic>
                <initial_velocity>0</initial_velocity>                                
            </plugin>        
        </gazebo>
        <gazebo>
            <plugin filename="libignition-gazebo-joint-controller-system.so"
                name="ignition::gazebo::systems::JointController">
                <joint_name>rear_right_wheel_joint</joint_name>
                <topic>/front_right_wheel/cmd_vel</topic>
                <initial_velocity>0</initial_velocity>                                
            </plugin>        
        </gazebo>

        <gazebo>
            <plugin filename="libignition-gazebo-joint-controller-system.so"
                name="ignition::gazebo::systems::JointController">
                <joint_name>front_left_wheel_joint</joint_name>
                <topic>/front_left_wheel/cmd_vel</topic>
                <initial_velocity>0</initial_velocity>                                
            </plugin>        
        </gazebo>

        <gazebo>
            <plugin filename="libignition-gazebo-joint-controller-system.so"
                name="ignition::gazebo::systems::JointController">
                <joint_name>rear_left_wheel_joint</joint_name>
                <topic>/front_left_wheel/cmd_vel</topic>
                <initial_velocity>0</initial_velocity>                                
            </plugin>        
        </gazebo>


        <gazebo>
            <plugin name='ignition::gazebo::systems::JointStatePublisher' filename='libignition-gazebo-joint-state-publisher-system.so'>
                <joint_name>front_left_wheel_joint</joint_name>
                <joint_name>front_right_wheel_joint</joint_name>
                <joint_name>rear_left_wheel_joint</joint_name>
                <joint_name>rear_right_wheel_joint</joint_name>
            </plugin>
        </gazebo>

        <!-- GPU LiDAR -->
        <gazebo reference="hokuyo">
            <sensor name="hokuyo" type='gpu_lidar'>"
                <topic>lidar</topic>
                <update_rate>10</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>683</samples>
                            <resolution>1</resolution>
                            <min_angle>-2.09235</min_angle>
                            <max_angle>2.09235</max_angle>
                        </horizontal>
                        <vertical>
                            <samples>1</samples>
                            <resolution>0.01</resolution>
                            <min_angle>0</min_angle>
                            <max_angle>0</max_angle>
                        </vertical>
                    </scan>
                    <range>
                        <min>0.060</min>
                        <max>4</max>
                           <resolution>0.001</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <always_on>1</always_on>
                <update_rate>10</update_rate>
                <visualize>true</visualize>
            </sensor>
    </gazebo>

    <!-- IMU -->
    <gazebo reference="imu_link">
        <sensor name="imu_link" type="imu">
        <topic>imu</topic>
            <imu>
              <angular_velocity>
                <x>
                  <noise type="gaussian">
                    <mean>0.001</mean>
                    <stddev>4e-2</stddev>
                    <bias_mean>0.000075</bias_mean>
                    <bias_stddev>0.000008</bias_stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.002</mean>
                    <stddev>3e-3</stddev>
                    <bias_mean>0.0000095</bias_mean>
                    <bias_stddev>0.0000012</bias_stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.002</mean>
                    <stddev>1e-1</stddev>
                    <bias_mean>-0.0001</bias_mean>
                    <bias_stddev>0.008</bias_stddev>
                  </noise>
                </z>
              </angular_velocity>
              <linear_acceleration>
                <x>
                  <noise type="gaussian">
                    <mean>0.00012</mean>
                    <stddev>3.7e-2</stddev>
                    <bias_mean>0.001</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.00015</mean>
                    <stddev>3.7e-2</stddev>
                    <bias_mean>0.001</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.00012</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.001</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                  </noise>
                </z>
              </linear_acceleration>
            </imu>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
          </sensor>

    </gazebo>

</robot>
